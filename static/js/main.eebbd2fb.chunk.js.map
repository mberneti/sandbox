{"version":3,"sources":["api/urls.js","api/apiInstance.js","api/filterResponse.js","api/city/city-api.js","components/CityPicker.js","views/Form1.js","views/Home.js","Router.js","theme.js","serviceWorker.js","index.js"],"names":["BASEURL","PROVINCES","apiInstance","axios","create","timeout","withCredentials","catchError","error","Promise","resolve","response","data","status","filterResponse","includes","getProvinces","api","get","urls","then","catch","getCities","provinceId","getDistricts","cityId","CityPicker","emptyOptions","provinceOptions","cityOptions","districtOptions","state","isLoading","selectedProvince","selectedCity","selectedDistrict","handleChange","prop","value","resetedDate","getResetedData","props","onChange","newState","setState","getSubItems","selectedProp","getCityOptions","getDistrictOptions","cityApi","r","console","warn","mapToInputOptions","getProvinceOptions","map","x","label","slug","id","this","provinceColSize","cityColSize","districtColSize","Fragment","className","options","isDisabled","Component","defaultProps","HomePage","log","App","Box","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","createMuiTheme","type","Boolean","window","location","hostname","match","jss","plugins","jssPreset","ReactDOM","render","StylesProvider","CssBaseline","classes","React","useState","open","setOpen","handleClick","getSubMenu","list","Collapse","in","unmountOnExit","List","ListItem","button","component","Link","to","path","ListItemText","primary","title","Container","Grid","container","item","xs","Typography","variant","md","aria-labelledby","subheader","ListSubheader","onClick","Form1","Home","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eebbd2fb.chunk.js","sourcesContent":["export const BASEURL = \"https://api.tavanito.com\";\r\n\r\nexport const APIVERSION = \"/v1\";\r\n\r\nexport const BASEAPIURL = BASEURL + APIVERSION;\r\n\r\n//provinces\r\nexport const PROVINCES = BASEURL + APIVERSION + \"/provinces\";","import axios from 'axios';\r\n\r\nconst apiInstance = axios.create({\r\n    timeout: 10000,\r\n    // `withCredentials` indicates whether or not cross-site Access-Control requests\r\n    // should be made using credentials\r\n    //'Access-Control-Allow-Origin' header\r\n    withCredentials: false\r\n});\r\n\r\nexport default apiInstance;\r\n","export const catchError = error =>\r\n  new Promise(resolve => {\r\n    if (error.response) {\r\n      resolve({ error: true, data: error.response.data, status: error.response.status });\r\n    } else {\r\n      resolve({ error: true, data: error, status: error.status });\r\n    }\r\n  });\r\n\r\nexport const filterResponse = response =>\r\n  new Promise(resolve => {\r\n    if ([200, 201].includes(response.status)) {\r\n      return resolve({ error: false, data: response.data, status: response.status });\r\n    }\r\n    return resolve({ error: true, data: response.data, status: response.status });\r\n  });\r\n\r\nexport default filterResponse;\r\n","import * as urls from \"../urls\";\r\nimport api from \"../apiInstance\";\r\nimport { filterResponse, catchError } from \"../filterResponse\";\r\n\r\nexport const getProvinces = () => api.get(urls.PROVINCES).then(filterResponse).catch(catchError);\r\n\r\nexport const getCities = (provinceId) => api.get(urls.PROVINCES + `/${provinceId}/cities`).then(filterResponse).catch(catchError);\r\n\r\nexport const getDistricts = (provinceId, cityId) => api.get(urls.PROVINCES + `/${provinceId}/cities/${cityId}/districts`).then(filterResponse).catch(catchError);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport * as cityApi from '../api/city/city-api';\r\n\r\nclass CityPicker extends Component {\r\n\r\n  static defaultProps = {\r\n    provinceColSize: 4,\r\n    cityColSize: 4,\r\n    districtColSize: 4\r\n  };\r\n\r\n  emptyOptions = {\r\n    provinceOptions: [],\r\n    cityOptions: [],\r\n    districtOptions: [],\r\n  }\r\n\r\n  state = {\r\n    isLoading: true,\r\n    selectedProvince: \"\",\r\n    selectedCity: \"\",\r\n    selectedDistrict: \"\",\r\n    ...this.emptyOptions\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getProvinceOptions();\r\n  }\r\n\r\n  handleChange = (prop) => (value) => {\r\n\r\n    const resetedDate = this.getResetedData(prop);\r\n\r\n    if (this.props.onChange) {\r\n\r\n      const { selectedProvince, selectedCity, selectedDistrict } = this.state;\r\n\r\n      const newState = {\r\n        selectedProvince, selectedCity, selectedDistrict, ...resetedDate,\r\n        [prop]: value\r\n      };\r\n\r\n      this.props.onChange(newState);\r\n    }\r\n\r\n    this.setState({ [prop]: value, ...resetedDate }, this.getSubItems(prop));\r\n  }\r\n\r\n  getResetedData = (selectedProp) => {\r\n    switch (selectedProp) {\r\n      case 'selectedProvince':\r\n        return { selectedCity: '', selectedDistrict: '' };\r\n      case 'selectedCity':\r\n        return { selectedDistrict: '' };\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  getSubItems = (selectedProp) => () => {\r\n    switch (selectedProp) {\r\n      case 'selectedProvince':\r\n        this.getCityOptions();\r\n        break;\r\n      case 'selectedCity':\r\n        this.getDistrictOptions();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  getCityOptions = () => {\r\n\r\n    const selectedProvince = this.state.selectedProvince;\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    cityApi.getCities(selectedProvince.value).then(r => {\r\n\r\n      if (r.error) {\r\n        console.warn(r.data);\r\n        this.setState({ isLoading: false });\r\n        return;\r\n      }\r\n\r\n      this.setState({ isLoading: false, cityOptions: this.mapToInputOptions(r.data.data) });\r\n    });\r\n  }\r\n\r\n  getDistrictOptions = () => {\r\n\r\n    const { selectedProvince, selectedCity } = this.state;\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    cityApi.getDistricts(selectedProvince.value, selectedCity.value).then(r => {\r\n\r\n      if (r.error) {\r\n        console.warn(r.data);\r\n        this.setState({ isLoading: false });\r\n        return;\r\n      }\r\n\r\n      this.setState({ isLoading: false, districtOptions: this.mapToInputOptions(r.data.data) });\r\n    });\r\n\r\n  }\r\n\r\n  getProvinceOptions = () => {\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    cityApi.getProvinces().then(r => {\r\n\r\n      this.setState({ isLoading: false, provinceOptions: this.mapToInputOptions(r.data.data) });\r\n    });\r\n\r\n  }\r\n\r\n  mapToInputOptions = (data) => data.map((x) => ({ label: x.slug, value: x.id }));\r\n\r\n  render() {\r\n\r\n    const { selectedProvince, selectedCity, selectedDistrict, isLoading,\r\n      provinceOptions, cityOptions, districtOptions } = this.state;\r\n\r\n    const { provinceColSize, cityColSize, districtColSize } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={`col-${provinceColSize}`}>\r\n          <label>Province</label>\r\n          <Select\r\n            value={selectedProvince}\r\n            onChange={this.handleChange('selectedProvince')}\r\n            options={provinceOptions}\r\n            isDisabled={isLoading}\r\n          />\r\n        </div>\r\n        <div className={`col-${cityColSize}`}>\r\n          <label>City</label>\r\n          <Select\r\n            value={selectedCity}\r\n            onChange={this.handleChange('selectedCity')}\r\n            options={cityOptions}\r\n            isDisabled={isLoading || !selectedProvince}\r\n          />\r\n\r\n        </div>\r\n        <div className={`col-${districtColSize}`}>\r\n          <label>District</label>\r\n          <Select\r\n            value={selectedDistrict}\r\n            onChange={this.handleChange('selectedDistrict')}\r\n            options={districtOptions}\r\n            isDisabled={isLoading || !selectedCity}\r\n          />\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst sizeOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nCityPicker.propTypes = {\r\n  cityColSize: PropTypes.oneOf(sizeOptions),\r\n  provinceColSize: PropTypes.oneOf(sizeOptions),\r\n  districtColSize: PropTypes.oneOf(sizeOptions),\r\n};\r\n\r\nexport default CityPicker;\r\n","import React, { Component } from 'react';\nimport CityPicker from '../components/CityPicker';\n\nclass HomePage extends Component {\n\n  handleChange = (data) => {\n    console.log(data);\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className=\"row\">\n          <CityPicker provinceColSize={5} cityColSize={3} onChange={this.handleChange} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Box>\r\n      <h1>hi</h1>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport Form1 from \"./views/Form1\";\r\nimport Home from \"./views/Home\";\r\nimport {\r\n  List,\r\n  ListSubheader,\r\n  ListItem,\r\n  ListItemText,\r\n  Collapse,\r\n  Grid,\r\n  Container,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(\"\");\r\n\r\n  const handleClick = id => () => {\r\n    if (open === id) id = \"\";\r\n    setOpen(id);\r\n  };\r\n\r\n  const getSubMenu = (id, list) => (\r\n    <Collapse in={open === id} timeout=\"auto\" unmountOnExit>\r\n      <List>\r\n        {list.map(x => (\r\n          <ListItem\r\n            button\r\n            component={Link}\r\n            to={x.path}\r\n            className={classes.nested}\r\n          >\r\n            <ListItemText primary={x.title} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Collapse>\r\n  );\r\n\r\n  return (\r\n    <Router>\r\n      <Container>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h1\">MBerneti Sandbox</Typography>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <List\r\n              component=\"nav\"\r\n              aria-labelledby=\"nested-list-subheader\"\r\n              subheader={\r\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                  Topics\r\n                </ListSubheader>\r\n              }\r\n              className={classes.root}\r\n            >\r\n              <ListItem button onClick={handleClick(\"AdvancedAlgorithms\")}>\r\n                <ListItemText primary=\"Advanced Algorithms\" />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              {getSubMenu(\"AdvancedAlgorithms\", [\r\n                { path: \"/Binomial-Heaps\", title: \"Binomial Heaps\" }\r\n              ])}\r\n\r\n              <ListItem button onClick={handleClick(\"AdvancedOperatingSystem\")}>\r\n                <ListItemText primary=\"Advanced Operating System\" />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              {getSubMenu(\"AdvancedOperatingSystem\", [\r\n                { path: \"/os1\", title: \"os1\" }\r\n              ])}\r\n\r\n              <ListItem button onClick={handleClick(\"AdvancedCompiler\")}>\r\n                <ListItemText primary=\"Advanced Compiler\" />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              {getSubMenu(\"AdvancedCompiler\", [\r\n                { path: \"/compiler1\", title: \"compiler1\" }\r\n              ])}\r\n            </List>\r\n          </Grid>\r\n          <Grid item md={9}>\r\n            <Switch>\r\n              <Route path=\"/about\">\r\n                <Form1 />\r\n              </Route>\r\n              <Route path=\"/users\">\r\n                <h1> users</h1>\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home />\r\n              </Route>\r\n            </Switch>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Router>\r\n  );\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Router from \"./Router\";\nimport theme from \"./theme\";\nimport { StylesProvider, jssPreset } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { create } from \"jss\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins] });\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <StylesProvider jss={jss}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <Router />\n    </StylesProvider>\n  </MuiThemeProvider>,\n  document.querySelector(\"#root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}